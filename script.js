// Mobile menu toggle
const hamburger = document.getElementById('hamburger');
const navMenu = document.getElementById('nav-menu');

function closeMobileMenu() {
    if (navMenu) navMenu.classList.remove('active');
}

function toggleMobileMenu() {
    if (navMenu) navMenu.classList.toggle('active');
}

if (hamburger && navMenu) {
    hamburger.addEventListener('click', (e) => {
        e.preventDefault();
        e.stopPropagation();
        toggleMobileMenu();
    });

    // Close mobile menu when clicking on a link
    document.querySelectorAll('.nav-menu a').forEach(link => {
        link.addEventListener('click', () => {
            closeMobileMenu();
        });
    });

    // Close mobile menu when clicking outside
    document.addEventListener('click', (e) => {
        if (!hamburger.contains(e.target) && !navMenu.contains(e.target)) {
            closeMobileMenu();
        }
    });
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞—Ç–≤–∞—Ä—è–Ω–µ –Ω–∞ –º–µ–Ω—é—Ç–æ –ø—Ä–∏ resize –∫—ä–º –¥–µ—Å–∫—Ç–æ–ø
window.addEventListener('resize', () => {
    if (window.innerWidth > 768) {
        closeMobileMenu();
    }
});

// Smooth scrolling for navigation links
// –î–æ–±–∞–≤–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ href == "#"
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const href = this.getAttribute('href');
        if (href && href.length > 1) {
            const target = document.querySelector(href);
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        }
    });
});

// –°–∫—Ä–∏–ø—Ç –∑–∞ –ø–æ–∫–∞–∑–≤–∞–Ω–µ –∏ —Å–∫—Ä–∏–≤–∞–Ω–µ –Ω–∞ –º–æ–¥–∞–ª–Ω–∏—è –ø—Ä–æ–∑–æ—Ä–µ—Ü —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∏
// –í–∑–∏–º–∞–º–µ –±—É—Ç–æ–Ω–∞, –º–æ–¥–∞–ª–Ω–∏—è –ø—Ä–æ–∑–æ—Ä–µ—Ü –∏ –±—É—Ç–æ–Ω–∞ –∑–∞ –∑–∞—Ç–≤–∞—Ä—è–Ω–µ
const callBtn = document.getElementById('callBtn');
const callModal = document.getElementById('callModal');
const closeCallModal = document.getElementById('closeCallModal');

// –ö–æ–≥–∞—Ç–æ —Å–µ –Ω–∞—Ç–∏—Å–Ω–µ –±—É—Ç–æ–Ω–∞ '–û–±–∞–¥–µ—Ç–µ —Å–µ', –ø–æ–∫–∞–∑–≤–∞–º–µ –º–æ–¥–∞–ª–Ω–∏—è –ø—Ä–æ–∑–æ—Ä–µ—Ü
if (callBtn && callModal) {
    callBtn.addEventListener('click', function() {
        callModal.style.display = 'flex';
    });
}

// –ö–æ–≥–∞—Ç–æ —Å–µ –Ω–∞—Ç–∏—Å–Ω–µ X, —Å–∫—Ä–∏–≤–∞–º–µ –º–æ–¥–∞–ª–Ω–∏—è –ø—Ä–æ–∑–æ—Ä–µ—Ü
if (closeCallModal && callModal) {
    closeCallModal.addEventListener('click', function() {
        callModal.style.display = 'none';
    });
}

// –ê–∫–æ —Å–µ –∫–ª–∏–∫–Ω–µ –∏–∑–≤—ä–Ω —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ—Ç–æ –Ω–∞ –º–æ–¥–∞–ª–∞, —Å—ä—â–æ –≥–æ —Å–∫—Ä–∏–≤–∞–º–µ
window.addEventListener('click', function(event) {
    if (event.target === callModal) {
        callModal.style.display = 'none';
    }
});

// –û–±—è—Å–Ω–µ–Ω–∏–µ:
// - –ö–æ–≥–∞—Ç–æ –Ω–∞—Ç–∏—Å–Ω–µ—Ç–µ –±—É—Ç–æ–Ω–∞, –º–æ–¥–∞–ª–Ω–∏—è—Ç –ø—Ä–æ–∑–æ—Ä–µ—Ü —Å–µ –ø–æ—è–≤—è–≤–∞ (display: flex).
// - –ö–æ–≥–∞—Ç–æ –Ω–∞—Ç–∏—Å–Ω–µ—Ç–µ X –∏–ª–∏ –∫–ª–∏–∫–Ω–µ—Ç–µ –∏–∑–≤—ä–Ω –ø—Ä–æ–∑–æ—Ä–µ—Ü–∞, —Ç–æ–π —Å–µ —Å–∫—Ä–∏–≤–∞ (display: none).

// –§—É–Ω–∫—Ü–∏—è –∑–∞ —Å–ª–µ–¥–µ–Ω–µ –Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞—Ç–∞ —Å–µ–∫—Ü–∏—è –∏ –æ–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏—è—Ç–∞
function updateActiveNavLink() {
    const sections = document.querySelectorAll('section[id]');
    const navLinks = document.querySelectorAll('.nav-menu a');
    
    let currentSection = '';
    
    sections.forEach(section => {
        const sectionTop = section.offsetTop - 100; // –û—Ç—Å—Ç—ä–ø –∑–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏—è—Ç–∞
        const sectionHeight = section.clientHeight;
        const scrollPosition = window.scrollY;
        
        if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {
            currentSection = section.getAttribute('id');
        }
    });
    
    // –ü—Ä–µ–º–∞—Ö–≤–∞–º–µ –∞–∫—Ç–∏–≤–Ω–∏—è –∫–ª–∞—Å –æ—Ç –≤—Å–∏—á–∫–∏ –ª–∏–Ω–∫–æ–≤–µ
    navLinks.forEach(link => {
        link.classList.remove('active');
    });
    
    // –î–æ–±–∞–≤—è–º–µ –∞–∫—Ç–∏–≤–Ω–∏—è –∫–ª–∞—Å –Ω–∞ —Ç–µ–∫—É—â–∏—è –ª–∏–Ω–∫
    navLinks.forEach(link => {
        if (link.getAttribute('href') === `#${currentSection}`) {
            link.classList.add('active');
        }
    });
}

// –î–æ–±–∞–≤—è–º–µ —Å–ª—É—à–∞—Ç–µ–ª –∑–∞ —Å–∫—Ä–æ–ª–≤–∞–Ω–µ
window.addEventListener('scroll', updateActiveNavLink);

// –ò–∑–≤–∏–∫–≤–∞–º–µ —Ñ—É–Ω–∫—Ü–∏—è—Ç–∞ –≤–µ–¥–Ω—ä–∂ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ç–∞
document.addEventListener('DOMContentLoaded', updateActiveNavLink);

// –û–±–Ω–æ–≤—è–≤–∞–º–µ –∞–∫—Ç–∏–≤–Ω–∏—è –ª–∏–Ω–∫ –ø—Ä–∏ –∫–ª–∏–∫–≤–∞–Ω–µ
document.querySelectorAll('.nav-menu a').forEach(link => {
    link.addEventListener('click', function() {
        // –ü—Ä–µ–º–∞—Ö–≤–∞–º–µ –∞–∫—Ç–∏–≤–Ω–∏—è –∫–ª–∞—Å –æ—Ç –≤—Å–∏—á–∫–∏ –ª–∏–Ω–∫–æ–≤–µ
        document.querySelectorAll('.nav-menu a').forEach(l => l.classList.remove('active'));
        // –î–æ–±–∞–≤—è–º–µ –∞–∫—Ç–∏–≤–Ω–∏—è –∫–ª–∞—Å –Ω–∞ –∫–ª–∏–∫–Ω–∞—Ç–∏—è –ª–∏–Ω–∫ –≤–µ–¥–Ω–∞–≥–∞
        this.classList.add('active');
        
        // –°–ª–µ–¥ –∫—Ä–∞—Ç–∫–∞ –ø–∞—É–∑–∞ –ø–æ–∑–≤–æ–ª—è–≤–∞–º–µ –Ω–∞ —Å–∫—Ä–æ–ª–≤–∞–Ω–µ—Ç–æ –¥–∞ –ø—Ä–æ–¥—ä–ª–∂–∏ –¥–∞ —Å–ª–µ–¥–≤–∞ –∞–∫—Ç–∏–≤–Ω–∞—Ç–∞ —Å–µ–∫—Ü–∏—è
        setTimeout(() => {
            // –í–∫–ª—é—á–≤–∞–º–µ –æ–±—Ä–∞—Ç–Ω–æ —Å–ª–µ–¥–µ–Ω–µ—Ç–æ –Ω–∞ —Å–∫—Ä–æ–ª–∞ —Å–ª–µ–¥ 1 —Å–µ–∫—É–Ω–¥–∞
            window.addEventListener('scroll', updateActiveNavLink);
        }, 1000);
        
        // –í—Ä–µ–º–µ–Ω–Ω–æ –∏–∑–∫–ª—é—á–≤–∞–º–µ —Å–ª–µ–¥–µ–Ω–µ—Ç–æ –Ω–∞ —Å–∫—Ä–æ–ª–∞
        window.removeEventListener('scroll', updateActiveNavLink);
    });
});

// –§—É–Ω–∫—Ü–∏—è –∑–∞ —Å–ª–µ–¥–µ–Ω–µ –Ω–∞ –ø–æ–∑–∏—Ü–∏—è—Ç–∞ –Ω–∞ floating –±—É—Ç–æ–Ω–∞ –∏ —Å–ø–∏—Ä–∞–Ω–µ –º—É –Ω–∞–¥ —Ñ—É—Ç—ä—Ä–∞
function updateCallButtonPosition() {
    const callBtn = document.getElementById('callBtn');
    const footer = document.querySelector('.footer');
    
    if (!callBtn || !footer) return;
    
    const footerTop = footer.offsetTop;
    const scrollPosition = window.scrollY + window.innerHeight;
    
    // –ê–∫–æ —Å–∫—Ä–æ–ª—ä—Ç –µ –±–ª–∏–∑–æ –¥–æ —Ñ—É—Ç—ä—Ä–∞
    if (scrollPosition >= footerTop) {
        // –°–ø–∏—Ä–∞–º–µ –±—É—Ç–æ–Ω–∞ —Ç–æ—á–Ω–æ –Ω–∞–¥ —Ñ—É—Ç—ä—Ä–∞
        callBtn.style.position = 'absolute';
        callBtn.style.top = (footerTop - 80) + 'px';
        callBtn.style.bottom = 'auto';
    } else {
        // –í—Ä—ä—â–∞–º–µ –±—É—Ç–æ–Ω–∞ –∫—ä–º –Ω–æ—Ä–º–∞–ª–Ω–∞—Ç–∞ floating –ø–æ–∑–∏—Ü–∏—è
        callBtn.style.position = 'fixed';
        callBtn.style.top = 'auto';
        callBtn.style.bottom = '20px';
    }
}

// –î–æ–±–∞–≤—è–º–µ —Å–ª—É—à–∞—Ç–µ–ª –∑–∞ —Å–∫—Ä–æ–ª–≤–∞–Ω–µ –∑–∞ –±—É—Ç–æ–Ω–∞
window.addEventListener('scroll', updateCallButtonPosition);

// –ò–∑–≤–∏–∫–≤–∞–º–µ —Ñ—É–Ω–∫—Ü–∏—è—Ç–∞ –≤–µ–¥–Ω—ä–∂ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ç–∞
document.addEventListener('DOMContentLoaded', updateCallButtonPosition); 

// –î–æ–±–∞–≤—è–º —Å–ª—É—à–∞—Ç–µ–ª –∑–∞ –±—É—Ç–æ–Ω–∞ –¥–æ hamburger –º–µ–Ω—é—Ç–æ –Ω–∞ –º–æ–±–∏–ª–Ω–∞ –≤–µ—Ä—Å–∏—è
const navCallBtnMobile = document.getElementById('navCallBtnMobile');
if (navCallBtnMobile && callModal) {
    navCallBtnMobile.addEventListener('click', function() {
        callModal.style.display = 'flex';
    });
} 

// --- Static Reviews Slider ---

document.addEventListener("DOMContentLoaded", function() {
    reviewsData = [
        {
            author_name: "–í–∏–∫—Ç–æ—Ä –¢–∏–Ω–µ–≤",
            rating: 5,
            text: "–û—Ç–ª–∏—á–Ω–∏ –±—É—Ä–≥–µ—Ä–∏ –∏ –Ω–∞–π-–≤–µ—á–µ –ª–∏—á–Ω–æ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ.",
            profile_photo: "ViktorTinev.png"
        },
        {
            author_name: "MAP MASTER",
            rating: 5,
            text: "–ù–∞–π-–¥–æ–±—Ä–∏—Ç–µ –±—É—Ä–≥–µ—Ä–∏ –∫–æ–∏—Ç–æ —Å–º–µ —è–ª–∏ –Ω—è–∫–æ–≥–∞, –¥–æ—Ä–∏ –∏ –≤ —Å—Ç–æ–ª–∏—Ü–∞—Ç–∞! –ö–∞–∫–≤–æ—Ç–æ –∏ –¥–∞ —Å–∏ –≤–∑–µ–º–µ—Ç–µ –Ω—è–º–∞ –¥–∞ —Å—ä–∂–∞–ª–∏—Ç–µ!",
            profile_photo: "MapMaster.png"
        },
        {
            author_name: "Valentin",
            rating: 5,
            text: "–ë–µ–∑—Å–ø–æ—Ä–Ω–æ –Ω–∞–π-–¥–æ–±—Ä–∏—Ç–µ –±—É—Ä–≥–µ—Ä–∏ –≤ –≥—Ä–∞–¥–∞. –ú–µ—Å–æ—Ç–æ –∏–¥–≤–∞ –ø—Ä—è—Å–Ω–æ –±–µ–∑ –¥–∞ –µ –∑–∞–º—Ä–∞–∑—è–≤–∞–Ω–æ, –∫–æ–µ—Ç–æ –Ω—è–º—è –¥–∞ —Å—Ä–µ—â–Ω–µ—Ç–µ –Ω–∞ –º–Ω–æ–≥–æ –º–µ—Å—Ç–∞. –Ø–≤–Ω–æ –º–∞–ª–∫–æ—Ç–æ –Ω–µ–≥–∞—Ç–∏–≤–Ω–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏ —Å–∞ –Ω–∞ –¥—Ä–µ–±–Ω–∏—á–∫–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è. ü§´",
            profile_photo: "Valentin.png"
        },
        {
            author_name: "Irinka Georgieva",
            rating: 5,
            text: "–ü–µ—Ä—Ñ–µ–∫—Ç–Ω–∏! –†–∞–±–æ—Ç–∞ —Å –ø—Ä–µ—Ü–∏–∑–Ω–æ—Å—Ç! –ò–∑–∫–ª—é—á–∏—Ç–µ–ª–Ω–∏ –ø—Ä–æ–¥—É–∫—Ç–∏! –í–∫—É—Å! –ò–∑—Ç—ä–Ω—á–µ–Ω–æ—Å—Ç!    –ë—ä—Ä–∑–æ –æ–±—Å–ª—É–∂–≤–∞–Ω–µ. –ü—Ä–µ–ø–æ—Ä—ä—á–≤–∞–º! –ù–µ –ø—Ä–æ–ø—É—Å–∫–∞–π—Ç–µ –¥–∞ –æ–ø–∏—Ç–∞—Ç–µ —Ç–µ–∑–∏ –≤–∫—É—Å–æ—Ç–∏–∏!",
            profile_photo: "Irinka.png"
        },
        {
            author_name: "Mark-Aleks Evtimov",
            rating: 5,
            text: "–ë—ä—Ä–∑–æ, –≤–∫—É—Å–Ω–æ, –ª—é–±–µ–∑–Ω–æ, –Ω–∞ –¥–æ–±—Ä–∏ —Ü–µ–Ω–∏.",
            profile_photo: "MarkAleks.png"
        }
    ];
    renderReviewsSlider();
    window.addEventListener('resize', handleResizeReviewsSlider);
});

let reviewsData = [];
let currentIndex = 0;
let isAnimating = false;
let visibleCount = getVisibleReviewsCount();

function getVisibleReviewsCount() {
    if (window.innerWidth <= 700) return 1;
    if (window.innerWidth <= 1000) return 2;
    return 3;
}

function handleResizeReviewsSlider() {
    const newCount = getVisibleReviewsCount();
    if (newCount !== visibleCount) {
        visibleCount = newCount;
        // –ê–∫–æ currentIndex –µ –∏–∑–≤—ä–Ω –æ–±—Ö–≤–∞—Ç–∞, –≥–æ –∫–æ—Ä–∏–≥–∏—Ä–∞–º–µ
        if (currentIndex > reviewsData.length - visibleCount) {
            currentIndex = Math.max(0, reviewsData.length - visibleCount);
        }
        renderReviewsSlider();
    }
}

function renderReviewsSlider(direction) {
    const container = document.getElementById('google-reviews');
    if (!container) return;
    if (!reviewsData.length) {
        container.innerHTML = '<div>–ù—è–º–∞ —Ä–µ–≤—é—Ç–∞.</div>';
        return;
    }
    visibleCount = getVisibleReviewsCount();
    let visible = reviewsData.slice(currentIndex, currentIndex + visibleCount);
    if (visible.length < visibleCount) {
        visible = reviewsData.slice(-visibleCount);
        currentIndex = reviewsData.length - visibleCount;
    }
    // –ê–Ω–∏–º–∞—Ü–∏—è: fade-out, –ø–æ—Å–ª–µ fade-in
    if (direction) {
        isAnimating = true;
        container.querySelectorAll('.review').forEach(el => el.classList.add('fade-out'));
        setTimeout(() => {
            container.innerHTML = visible.map(r => `
                <div class="review fade-in">
                    <div class="review-header">
                        <img class="review-avatar" src="${r.profile_photo || 'SmashBurger.png'}" alt="–ü—Ä–æ—Ñ–∏–ª–Ω–∞ —Å–Ω–∏–º–∫–∞">
                        <div class="author">${r.author_name}</div>
                    </div>
                    <div class="rating">${'‚òÖ'.repeat(r.rating)}${'‚òÜ'.repeat(5 - r.rating)}</div>
                    <div class="text">${r.text}</div>
                </div>
            `).join('');
            setTimeout(() => {
                container.querySelectorAll('.review').forEach(el => el.classList.remove('fade-in'));
                isAnimating = false;
            }, 300);
        }, 250);
    } else {
        container.innerHTML = visible.map(r => `
            <div class="review">
                <div class="review-header">
                    <img class="review-avatar" src="${r.profile_photo || 'SmashBurger.png'}" alt="–ü—Ä–æ—Ñ–∏–ª–Ω–∞ —Å–Ω–∏–º–∫–∞">
                    <div class="author">${r.author_name}</div>
                </div>
                <div class="rating">${'‚òÖ'.repeat(r.rating)}${'‚òÜ'.repeat(5 - r.rating)}</div>
                <div class="text">${r.text}</div>
            </div>
        `).join('');
    }
    const prevBtn = document.getElementById('reviewsPrev');
    const nextBtn = document.getElementById('reviewsNext');
    if (prevBtn) prevBtn.disabled = currentIndex === 0;
    if (nextBtn) nextBtn.disabled = currentIndex >= reviewsData.length - visibleCount;
}

const prevBtn = document.getElementById('reviewsPrev');
const nextBtn = document.getElementById('reviewsNext');
if (prevBtn) {
    prevBtn.addEventListener('click', function() {
        if (currentIndex > 0 && !isAnimating) {
            visibleCount = getVisibleReviewsCount();
            currentIndex = Math.max(0, currentIndex - visibleCount);
            renderReviewsSlider('left');
        }
    });
}
if (nextBtn) {
    nextBtn.addEventListener('click', function() {
        visibleCount = getVisibleReviewsCount();
        if (currentIndex < reviewsData.length - visibleCount && !isAnimating) {
            currentIndex = Math.min(reviewsData.length - visibleCount, currentIndex + visibleCount);
            renderReviewsSlider('right');
        }
    });
}
// --- –ö—Ä–∞–π –Ω–∞ Static Reviews Slider --- 

// --- Swipe support for reviews on touch devices ---
(function() {
    let touchStartX = 0;
    let touchEndX = 0;
    const minSwipeDistance = 50; // px
    const reviewsSlider = document.getElementById('google-reviews');
    if (reviewsSlider) {
        reviewsSlider.addEventListener('touchstart', function(e) {
            if (e.touches.length === 1) {
                touchStartX = e.touches[0].clientX;
            }
        });
        reviewsSlider.addEventListener('touchmove', function(e) {
            if (e.touches.length === 1) {
                touchEndX = e.touches[0].clientX;
            }
        });
        reviewsSlider.addEventListener('touchend', function(e) {
            const dx = touchEndX - touchStartX;
            if (Math.abs(dx) > minSwipeDistance) {
                if (dx < 0) {
                    // swipe left -> next
                    if (currentIndex < reviewsData.length - getVisibleReviewsCount() && !isAnimating) {
                        currentIndex = Math.min(reviewsData.length - getVisibleReviewsCount(), currentIndex + getVisibleReviewsCount());
                        renderReviewsSlider('right');
                    }
                } else {
                    // swipe right -> prev
                    if (currentIndex > 0 && !isAnimating) {
                        currentIndex = Math.max(0, currentIndex - getVisibleReviewsCount());
                        renderReviewsSlider('left');
                    }
                }
            }
            touchStartX = 0;
            touchEndX = 0;
        });
    }
})(); 